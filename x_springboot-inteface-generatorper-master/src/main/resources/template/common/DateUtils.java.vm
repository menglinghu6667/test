package ${package}.utils;

import org.springframework.util.StringUtils;

import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

public class DateUtils {
    /**
     * 功能描述：将字符串转成日期,如果dateFormat为空,则默认返回yyyy-MM-dd HH:mm:ss格式的日期
     * @param str 日期字符串
     * @param dateFormat 日期格式
     * @return
     * @throws ParseException
     */
    public static Date strToDate(String str, String dateFormat) throws ParseException {
        if (dateFormat == null || dateFormat.trim().equals("")) {
            dateFormat = "yyyy-MM-dd HH:mm:ss";
        }
        return new SimpleDateFormat(dateFormat).parse(str);
    }
    /**
     * Java将Unix时间戳转换成指定格式日期字符串
     * @param seconds 时间戳 如："1537242986211";
     * @param format 要格式化的格式 默认："yyyy-MM-dd HH:mm:ss";
     *
     * @return 返回结果 如："2016-09-05 16:06:42";
     */
    public static String timeStamp2DateStr(long seconds,String format) {
        if(seconds<=0){
            return "";
        }

        if (StringUtils.isEmpty(format)) {
            format = "yyyy-MM-dd HH:mm:ss";
        }
        Date date = new Date(seconds);
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(format);
        return simpleDateFormat.format(date);
    }



    /**
     * 获取两个时间戳直接的差
     * @param startTime
     * @param endTime
     * @return
     */
    public static String timeDiff(String startTime,String endTime){
        long startTime1 = Long.parseLong(startTime);
        long endTime1 = Long.parseLong(endTime);
        long result = endTime1 - startTime1;
        return String.valueOf(result);
    }

    public static void main(String[] args) throws Exception {
        System.out.println(timeStamp2DateStr(System.currentTimeMillis(),""));
        System.out.println(System.currentTimeMillis());

        System.out.println(138/(1000));

//        float percent = BigDecimal.valueOf(receivedAlarmCount).divide(BigDecimal.valueOf(alarmsTotal), 2, BigDecimal.ROUND_HALF_UP).floatValue();
    }
}
